@page "/add-sled"
@using apec4_sledManagement.Library
@using apec4_sledManagement.Library.Models

@rendermode InteractiveServer
@inject SledManagementRepo ManagementRepo

<h3>Add Sled</h3>

<EditForm Model="CreateSled" FormName="createSledForm" OnValidSubmit="ValidFormSubmited">
    <DataAnnotationsValidator />
    <div>
        <label>Date of creation:</label>
        <InputDate @bind-Value="CreateSled.CreateDate" />
        <ValidationMessage For="@(() => CreateSled.CreateDate)"></ValidationMessage>
    </div>

    <div>
        <label for="sledType">Select sled type:</label>
        <InputSelect @bind-Value="@CreateSled.Type">
            @foreach (var type in Enum.GetValues(typeof(SledType)))
            {
                <option value="@type">@type</option>
            }
        </InputSelect>
        <ValidationMessage For="() => CreateSled.Type" />
    </div>

    <button type="submit">Create Sled</button>

</EditForm>

@code {
    // TODO: only admin can see this page
    public Sled CreateSled { get; set; }

    protected override Task OnInitializedAsync()
    {
        CreateSled = new Sled()
            {
                CreateDate = DateTime.Now,
            };

        return base.OnInitializedAsync();
    }

    public void ValidFormSubmited()
    {
        var result = ManagementRepo.CreateSled(CreateSled);
        if (result < 1)
        {
            // TODO: not worked -> show message
        }

        CreateSled = new Sled()
            {
                CreateDate = DateTime.Now,
            };
    }
}
