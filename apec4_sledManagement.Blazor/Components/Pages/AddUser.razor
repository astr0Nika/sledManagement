@page "/add-user"
@using apec4_sledManagement.Library
@using apec4_sledManagement.Library.TransferOfDataModels

@rendermode InteractiveServer
@inject SledManagementRepo ManagementRepo

<h3>Add User</h3>
<br />

<EditForm Model="CreateUser" FormName="createUserForm" OnValidSubmit="ValidUserSubmit" style="margin-left:10%; margin-right:10%">
    <DataAnnotationsValidator />

    <div class="form-floating mb-3">
        <InputText @bind-Value="CreateUser.Username" class="form-control" autocomplete="username" aria-required="true" />
        <label for="username">Username:</label>
        <ValidationMessage For="@(() => CreateUser.Username)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="CreateUser.FirstName" class="form-control" autocomplete="firstname" aria-required="true" />
        <label for="firstname">First name:</label>
        <ValidationMessage For="@(() => CreateUser.FirstName)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="CreateUser.LastName" class="form-control" autocomplete="lastname" aria-required="true" />
        <label for="lastname">Last name:</label>
        <ValidationMessage For="@(() => CreateUser.LastName)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="CreateUser.Email" class="form-control" autocomplete="email" aria-required="true" />
        <label for="email">Email:</label>
        <ValidationMessage For="@(() => CreateUser.Email)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-floating mb-3">
        <InputText type="password" @bind-Value="CreateUser.Password" class="form-control" autocomplete="password" aria-required="true" />
        <label for="password">Password:</label>
        <ValidationMessage For="@(() => CreateUser.Password)" class="text-danger"></ValidationMessage>
    </div>

    @if (!Result.Successful)
    {
        <div class="alert alert-danger">@Result.Message</div>
    }

    <button type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
</EditForm>

@code {
    private RepoResult Result { get; set; }
    private UserInputModel CreateUser { get; set; }

    protected override void OnInitialized()
    {
        Result = new() { Successful = true };
        CreateUser = new();
    }

    public void ValidUserSubmit()
    {
        if (string.IsNullOrWhiteSpace(CreateUser.Username)
            || string.IsNullOrWhiteSpace(CreateUser.FirstName)
            || string.IsNullOrWhiteSpace(CreateUser.LastName)
            || string.IsNullOrWhiteSpace(CreateUser.Email)
            || string.IsNullOrWhiteSpace(CreateUser.Password))
        {
            Result = new()
                {
                    Successful = false,
                    Message = "Error: A field was not filled."
                };
            return;
        }

        // TODO: validate password -> min. 5 characters; numbers and letters

        Result = ManagementRepo.CreateUser(CreateUser);
        if (!Result.Successful)
        {
            return;
        }

        // TODO: add message of success

        CreateUser = new();
    }
}
